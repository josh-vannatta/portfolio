{"remainingRequest":"C:\\Server\\www\\portfolio\\web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Server\\www\\portfolio\\web\\node_modules\\ngx-page-scroll\\src\\ngx-page-scroll-util.service.js","dependencies":[{"path":"C:\\Server\\www\\portfolio\\web\\node_modules\\ngx-page-scroll\\src\\ngx-page-scroll-util.service.js","mtime":1521614071971},{"path":"C:\\Server\\www\\portfolio\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1518922501563},{"path":"C:\\Server\\www\\portfolio\\web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518922507228}],"contextDependencies":[],"result":["var PageScrollUtilService = /*@__PURE__*/ (function () {\r\n    function PageScrollUtilService() {\r\n    }\r\n    /**\r\n     * Util method to check whether a given variable is either undefined or null\r\n     * @param variable\r\n     * @returns {boolean} true the variable is undefined or null\r\n     */\r\n    PageScrollUtilService.isUndefinedOrNull = function (variable) {\r\n        return (typeof variable === 'undefined') || variable === undefined || variable === null;\r\n    };\r\n    PageScrollUtilService.extractElementPosition = function (document, scrollTargetElement) {\r\n        var body = document.body;\r\n        var docEl = document.documentElement;\r\n        var windowPageYOffset = document.defaultView && document.defaultView.pageYOffset || undefined;\r\n        var windowPageXOffset = document.defaultView && document.defaultView.pageXOffset || undefined;\r\n        var scrollTop = windowPageYOffset || docEl.scrollTop || body.scrollTop;\r\n        var scrollLeft = windowPageXOffset || docEl.scrollLeft || body.scrollLeft;\r\n        var clientTop = docEl.clientTop || body.clientTop || 0;\r\n        var clientLeft = docEl.clientLeft || body.clientLeft || 0;\r\n        if (PageScrollUtilService.isUndefinedOrNull(scrollTargetElement)) {\r\n            // No element found, so return the current position to not cause any change in scroll position\r\n            return { top: scrollTop, left: scrollLeft };\r\n        }\r\n        var box = scrollTargetElement.getBoundingClientRect();\r\n        var top = box.top + scrollTop - clientTop;\r\n        var left = box.left + scrollLeft - clientLeft;\r\n        return { top: Math.round(top), left: Math.round(left) };\r\n    };\r\n    return PageScrollUtilService;\r\n}());\r\nexport { PageScrollUtilService };\r\n",null]}